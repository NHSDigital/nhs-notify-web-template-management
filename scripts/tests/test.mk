# WARNING: Please DO NOT edit this file! It is maintained in the Repository Template (https://github.com/nhs-england-tools/repository-template). Raise a PR instead.

# The test types listed here are both those which might run both locally and in CI, or
# in one but not the other.  All of the test types listed at
# https://github.com/NHSDigital/software-engineering-quality-framework/blob/main/quality-checks.md
# should be represented here with the exception of:
#   - dependency scanning, which we expect to be applied at the repository level
#   - secret scanning, which we expect to be a pre-commit hook
#   - code review, which is outside the scope of automated testing for the moment

test-unit: # Run your unit tests from scripts/test/unit @Testing
	make _test name="unit"

test-lint: # Lint your code from scripts/test/lint @Testing
	make _test name="lint"

test-typecheck: # Typecheck your code from scripts/test/typecheck @Testing
	make _test name="typecheck"

test-coverage: # Evaluate code coverage from scripts/test/coverage @Testing
	make _test name="coverage"

test-accessibility: # Run tests from scripts/tests/accessibility.sh @Testing
	make _test name="accessibility"

test-ui-component: # Run tests from scripts/tests/ui-component.sh @Testing
	make _test name="ui-component"

test-ui-e2e: # Run tests from scripts/tests/ui-e2e.sh @Testing
	make _test name="ui-e2e"

test-api: # Run tests from scripts/tests/api.sh @Testing
	make _test name="api"

test-ui-user-timeout: # Run tests from scripts/tests/ui-user-timeout.sh @Testing
	make _test name="ui-user-timeout"

test-event: # Run tests from scripts/tests/event.sh @Testing
	make _test name="event"

test-contract-provider: # Run tests from scripts/tests/contract-provider.sh @Testing
	make _test name="contract-provider"

test: # Run all the test tasks @Testing
	make \
		test-unit \
		test-lint \
		test-typecheck \
		test-coverage \
		test-ui-component \
		test-ui-e2e \
		test-api \
		test-accessibility \
		test-ui-user-timeout \

_test:
	set -e
	script="./scripts/tests/${name}.sh"
	if [ -e "$${script}" ]; then
		exec $${script}
	else
		echo "make test-${name} not implemented: $${script} not found" >&2
	fi

${VERBOSE}.SILENT: \
	_test \
	test \
	test-accessibility \
	test-coverage \
	test-lint \
	test-typecheck \
	test-ui-component \
	test-api \
	test-ui-e2e \
	test-ui-user-timeout \
	test-unit \
	test-event \
	test-contract-provider \
