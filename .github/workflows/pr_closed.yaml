name: PR Closed

on:
  workflow_dispatch:
  pull_request:
    types: [closed]
    branches:
      - main

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  check-merge-or-workflow-dispatch:
    runs-on: ubuntu-latest
    outputs:
      deploy: ${{ steps.check.outputs.deploy }}
    steps:
      - name: Check if PR was merged or workflow is triggered by workflow_dispatch
        id: check
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
            echo "Job triggered by workflow_dispatch - running 'deploy-main'"
          elif [[ "${{ github.event_name }}" == "pull_request" && "${{ github.event.pull_request.merged }}" == "true" ]]; then
            echo "deploy=true" >> $GITHUB_OUTPUT
            echo "Job triggered by Merged PR - running 'deploy-main'"
          else
            echo "deploy=false" >> $GITHUB_OUTPUT
            echo "Job not triggered by workflow_dispatch or Merged PR - Skipping 'deploy-main'"
          fi

  deploy-main:
    needs: check-merge-or-workflow-dispatch
    name: Deploy changes to main in dev AWS account
    runs-on: ubuntu-latest
    if: needs.check-merge-or-workflow-dispatch.outputs.deploy == 'true'

    permissions:
      id-token: write
      contents: read

    strategy:
      max-parallel: 1
      matrix:
        component: [acct, app]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Updating Main Environment
        env:
          PR_TRIGGER_PAT: ${{ secrets.PR_TRIGGER_PAT }}
        run: |
          bash .github/scripts/dispatch_internal_repo_workflow.sh \
            --releaseVersion "main" \
            --targetWorkflow "dispatch-deploy-static-notify-web-template-management-env.yaml" \
            --targetEnvironment "main" \
            --targetAccountGroup "nhs-notify-template-management-dev" \
            --targetComponent "${{ matrix.component }}" \
            --terraformAction "apply"

  check-event-schemas-version-change:
    name: Check for event schemas package version change
    needs: check-merge-or-workflow-dispatch
    if: needs.check-merge-or-workflow-dispatch.outputs.deploy == 'true'
    outputs:
      version_changed: ${{ steps.check-version.outputs.version_changed }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.2'
          registry-url: 'https://npm.pkg.github.com'

      - name: check if local version differs from latest published version
        id: check-version
        run: |
          published_version=$(npm view @nhsdigital/nhs-notify-event-schemas-template-management --json 2>/dev/null | jq -r '.["dist-tags"].latest // "null"')
          echo "Published version: $published_version"

          local_version=$(jq -r '.version' packages/event-schemas/package.json)
          echo "Local version: $local_version"

          if [[ $local_version = $published_version ]]; then
            echo "Local version is the same as the latest published version - skipping publish"
            echo "version_changed=false" >> $GITHUB_OUTPUT
          else
            echo "Local version is different to the latest published version - publishing new version"
            echo "version_changed=true" >> $GITHUB_OUTPUT
          fi

  publish-event-schemas:
    name: Publish event schemas package to GitHub package registry
    needs: check-event-schemas-version-change
    if: needs.check-event-schemas-version-change.outputs.version_changed == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v5.0.0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20.18.2'
          registry-url: 'https://npm.pkg.github.com'

      - name: Install dependencies
        run: npm ci

      - name: Publish to GitHub Packages
        run: npm publish --workspace packages/event-schemas
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
