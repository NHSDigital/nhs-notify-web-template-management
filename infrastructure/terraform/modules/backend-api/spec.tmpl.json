{
  "components": {
    "schemas": {
      "BaseCreatedTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTemplate"
          },
          {
            "properties": {
              "campaignId": {
                "type": "string"
              },
              "clientId": {
                "type": "string"
              },
              "createdAt": {
                "format": "date-time",
                "type": "string"
              },
              "createdBy": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "templateStatus": {
                "$ref": "#/components/schemas/TemplateStatus"
              },
              "updatedAt": {
                "format": "date-time",
                "type": "string"
              },
              "updatedBy": {
                "type": "string"
              }
            },
            "required": [
              "createdAt",
              "id",
              "templateStatus",
              "updatedAt"
            ],
            "type": "object"
          }
        ],
        "type": "object"
      },
      "BaseLetterTemplateProperties": {
        "properties": {
          "files": {
            "$ref": "#/components/schemas/LetterFiles"
          },
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "letterType": {
            "$ref": "#/components/schemas/LetterType"
          },
          "templateType": {
            "enum": [
              "LETTER"
            ],
            "type": "string"
          }
        },
        "required": [
          "letterType",
          "language",
          "templateType"
        ],
        "type": "object"
      },
      "BaseTemplate": {
        "properties": {
          "name": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CascadeGroup": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CascadeGroupAccessible"
          },
          {
            "$ref": "#/components/schemas/CascadeGroupTranslations"
          },
          {
            "$ref": "#/components/schemas/CascadeGroupStandard"
          }
        ]
      },
      "CascadeGroupAccessible": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CascadeGroupBase"
          },
          {
            "additionalProperties": false,
            "properties": {
              "accessibleFormat": {
                "items": {
                  "$ref": "#/components/schemas/LetterType"
                },
                "type": "array"
              },
              "name": {
                "enum": [
                  "accessible"
                ],
                "type": "string"
              }
            },
            "required": [
              "accessibleFormat"
            ],
            "type": "object"
          }
        ]
      },
      "CascadeGroupBase": {
        "properties": {
          "name": {
            "$ref": "#/components/schemas/CascadeGroupName"
          }
        },
        "required": [
          "name"
        ],
        "type": "object"
      },
      "CascadeGroupName": {
        "enum": [
          "accessible",
          "standard",
          "translations"
        ],
        "type": "string"
      },
      "CascadeGroupStandard": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CascadeGroupBase"
          },
          {
            "additionalProperties": false,
            "properties": {
              "name": {
                "enum": [
                  "standard"
                ],
                "type": "string"
              }
            },
            "type": "object"
          }
        ]
      },
      "CascadeGroupTranslations": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CascadeGroupBase"
          },
          {
            "additionalProperties": false,
            "properties": {
              "language": {
                "items": {
                  "$ref": "#/components/schemas/Language"
                },
                "type": "array"
              },
              "name": {
                "enum": [
                  "translations"
                ],
                "type": "string"
              }
            },
            "required": [
              "language"
            ],
            "type": "object"
          }
        ]
      },
      "CascadeItem": {
        "oneOf": [
          {
            "$ref": "#/components/schemas/CascadeItemWithDefault"
          },
          {
            "$ref": "#/components/schemas/CascadeItemWithConditional"
          },
          {
            "$ref": "#/components/schemas/CascadeItemUnpopulated"
          }
        ]
      },
      "CascadeItemUnpopulated": {
        "properties": {
          "cascadeGroups": {
            "items": {
              "$ref": "#/components/schemas/CascadeGroupName"
            },
            "type": "array"
          },
          "channel": {
            "$ref": "#/components/schemas/Channel"
          },
          "channelType": {
            "$ref": "#/components/schemas/ChannelType"
          }
        },
        "required": [
          "cascadeGroups",
          "channel",
          "channelType"
        ],
        "type": "object"
      },
      "CascadeItemWithConditional": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CascadeItemUnpopulated"
          },
          {
            "not": {
              "required": [
                "defaultTemplateId"
              ]
            },
            "properties": {
              "conditionalTemplates": {
                "items": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/ConditionalTemplateLanguage"
                    },
                    {
                      "$ref": "#/components/schemas/ConditionalTemplateAccessible"
                    }
                  ]
                },
                "type": "array"
              }
            },
            "required": [
              "conditionalTemplates"
            ],
            "type": "object"
          }
        ]
      },
      "CascadeItemWithDefault": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CascadeItemUnpopulated"
          },
          {
            "not": {
              "required": [
                "conditionalTemplates"
              ]
            },
            "properties": {
              "defaultTemplateId": {
                "format": "uuid",
                "type": "string"
              }
            },
            "required": [
              "defaultTemplateId"
            ],
            "type": "object"
          }
        ]
      },
      "Channel": {
        "enum": [
          "EMAIL",
          "LETTER",
          "NHSAPP",
          "SMS"
        ],
        "type": "string"
      },
      "ChannelType": {
        "enum": [
          "primary",
          "secondary"
        ],
        "type": "string"
      },
      "ClientConfiguration": {
        "properties": {
          "campaignId": {
            "deprecated": true,
            "type": "string"
          },
          "campaignIds": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "features": {
            "$ref": "#/components/schemas/ClientFeatures"
          }
        },
        "required": [
          "features"
        ],
        "type": "object"
      },
      "ClientConfigurationSuccess": {
        "properties": {
          "clientConfiguration": {
            "$ref": "#/components/schemas/ClientConfiguration"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "clientConfiguration",
          "statusCode"
        ],
        "type": "object"
      },
      "ClientFeatures": {
        "properties": {
          "proofing": {
            "type": "boolean"
          },
          "routing": {
            "type": "boolean"
          }
        },
        "required": [],
        "type": "object"
      },
      "ConditionalTemplateAccessible": {
        "additionalProperties": false,
        "properties": {
          "accessibleFormat": {
            "$ref": "#/components/schemas/LetterType"
          },
          "templateId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "accessibleFormat",
          "templateId"
        ],
        "type": "object"
      },
      "ConditionalTemplateLanguage": {
        "additionalProperties": false,
        "properties": {
          "language": {
            "$ref": "#/components/schemas/Language"
          },
          "templateId": {
            "format": "uuid",
            "type": "string"
          }
        },
        "required": [
          "language",
          "templateId"
        ],
        "type": "object"
      },
      "CreateUpdateRoutingConfig": {
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "cascade": {
            "items": {
              "$ref": "#/components/schemas/CascadeItem"
            },
            "type": "array"
          },
          "cascadeGroupOverrides": {
            "items": {
              "$ref": "#/components/schemas/CascadeGroup"
            },
            "type": "array"
          },
          "name": {
            "type": "string"
          }
        },
        "required": [
          "campaignId",
          "cascadeGroupOverrides",
          "cascade",
          "name"
        ],
        "type": "object"
      },
      "CreateUpdateTemplate": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseTemplate"
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SmsProperties"
              },
              {
                "$ref": "#/components/schemas/EmailProperties"
              },
              {
                "$ref": "#/components/schemas/NhsAppProperties"
              },
              {
                "$ref": "#/components/schemas/UploadLetterProperties"
              }
            ]
          }
        ],
        "type": "object"
      },
      "EmailProperties": {
        "properties": {
          "message": {
            "type": "string"
          },
          "subject": {
            "type": "string"
          },
          "templateType": {
            "enum": [
              "EMAIL"
            ],
            "type": "string"
          }
        },
        "required": [
          "message",
          "subject",
          "templateType"
        ],
        "type": "object"
      },
      "Failure": {
        "properties": {
          "details": {},
          "statusCode": {
            "type": "integer"
          },
          "technicalMessage": {
            "type": "string"
          }
        },
        "required": [
          "technicalMessage",
          "statusCode"
        ],
        "type": "object"
      },
      "Language": {
        "enum": [
          "ar",
          "bg",
          "bn",
          "de",
          "el",
          "en",
          "es",
          "fa",
          "fr",
          "gu",
          "hi",
          "hu",
          "it",
          "ku",
          "lt",
          "lv",
          "ne",
          "pa",
          "pl",
          "pt",
          "ro",
          "ru",
          "sk",
          "so",
          "sq",
          "ta",
          "tr",
          "ur",
          "zh"
        ],
        "type": "string"
      },
      "LetterFiles": {
        "properties": {
          "pdfTemplate": {
            "$ref": "#/components/schemas/VersionedFileDetails"
          },
          "proofs": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ProofFileDetails"
            },
            "type": "object"
          },
          "testDataCsv": {
            "$ref": "#/components/schemas/VersionedFileDetails"
          }
        },
        "required": [
          "pdfTemplate"
        ],
        "type": "object"
      },
      "LetterProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseLetterTemplateProperties"
          },
          {
            "properties": {
              "files": {
                "$ref": "#/components/schemas/LetterFiles"
              },
              "personalisationParameters": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "proofingEnabled": {
                "type": "boolean"
              },
              "supplierReferences": {
                "additionalProperties": {
                  "type": "string"
                },
                "type": "object"
              }
            },
            "required": [
              "files"
            ],
            "type": "object"
          }
        ]
      },
      "LetterType": {
        "enum": [
          "q4",
          "x0",
          "x1"
        ],
        "type": "string"
      },
      "NhsAppProperties": {
        "properties": {
          "message": {
            "type": "string"
          },
          "templateType": {
            "enum": [
              "NHS_APP"
            ],
            "type": "string"
          }
        },
        "required": [
          "message",
          "templateType"
        ],
        "type": "object"
      },
      "ProofFileDetails": {
        "properties": {
          "fileName": {
            "type": "string"
          },
          "supplier": {
            "type": "string"
          },
          "virusScanStatus": {
            "$ref": "#/components/schemas/VirusScanStatus"
          }
        },
        "required": [
          "fileName",
          "supplier",
          "virusScanStatus"
        ],
        "type": "object"
      },
      "RoutingConfig": {
        "properties": {
          "campaignId": {
            "type": "string"
          },
          "cascade": {
            "items": {
              "$ref": "#/components/schemas/CascadeItem"
            },
            "type": "array"
          },
          "cascadeGroupOverrides": {
            "items": {
              "$ref": "#/components/schemas/CascadeGroup"
            },
            "type": "array"
          },
          "clientId": {
            "type": "string"
          },
          "createdAt": {
            "format": "date-time",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/RoutingConfigStatus"
          },
          "updatedAt": {
            "format": "date-time",
            "type": "string"
          }
        },
        "required": [
          "campaignId",
          "cascadeGroupOverrides",
          "cascade",
          "clientId",
          "createdAt",
          "id",
          "name",
          "status",
          "updatedAt"
        ],
        "type": "object"
      },
      "RoutingConfigStatus": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/RoutingConfigStatusActive"
          },
          {
            "enum": [
              "DELETED"
            ],
            "type": "string"
          }
        ]
      },
      "RoutingConfigStatusActive": {
        "enum": [
          "COMPLETED",
          "DRAFT"
        ],
        "type": "string"
      },
      "RoutingConfigSuccess": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/RoutingConfig"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "data",
          "statusCode"
        ],
        "type": "object"
      },
      "RoutingConfigSuccessList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/RoutingConfig"
            },
            "type": "array"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "data",
          "statusCode"
        ],
        "type": "object"
      },
      "SmsProperties": {
        "properties": {
          "message": {
            "type": "string"
          },
          "templateType": {
            "enum": [
              "SMS"
            ],
            "type": "string"
          }
        },
        "required": [
          "message",
          "templateType"
        ],
        "type": "object"
      },
      "TemplateDto": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseCreatedTemplate"
          },
          {
            "oneOf": [
              {
                "$ref": "#/components/schemas/SmsProperties"
              },
              {
                "$ref": "#/components/schemas/EmailProperties"
              },
              {
                "$ref": "#/components/schemas/NhsAppProperties"
              },
              {
                "$ref": "#/components/schemas/LetterProperties"
              }
            ]
          }
        ],
        "type": "object"
      },
      "TemplateStatus": {
        "enum": [
          "DELETED",
          "NOT_YET_SUBMITTED",
          "PENDING_PROOF_REQUEST",
          "PENDING_UPLOAD",
          "PENDING_VALIDATION",
          "SUBMITTED",
          "VALIDATION_FAILED",
          "VIRUS_SCAN_FAILED",
          "WAITING_FOR_PROOF",
          "PROOF_AVAILABLE"
        ],
        "type": "string"
      },
      "TemplateSuccess": {
        "properties": {
          "data": {
            "$ref": "#/components/schemas/TemplateDto"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "data",
          "statusCode"
        ],
        "type": "object"
      },
      "TemplateSuccessList": {
        "properties": {
          "data": {
            "items": {
              "$ref": "#/components/schemas/TemplateDto"
            },
            "type": "array"
          },
          "statusCode": {
            "type": "integer"
          }
        },
        "required": [
          "data",
          "statusCode"
        ],
        "type": "object"
      },
      "TemplateType": {
        "enum": [
          "NHS_APP",
          "EMAIL",
          "SMS",
          "LETTER"
        ],
        "type": "string"
      },
      "UploadLetterProperties": {
        "allOf": [
          {
            "$ref": "#/components/schemas/BaseLetterTemplateProperties"
          },
          {
            "properties": {
              "campaignId": {
                "type": "string"
              }
            },
            "required": [
              "campaignId"
            ]
          }
        ]
      },
      "VersionedFileDetails": {
        "properties": {
          "currentVersion": {
            "type": "string"
          },
          "fileName": {
            "type": "string"
          },
          "virusScanStatus": {
            "$ref": "#/components/schemas/VirusScanStatus"
          }
        },
        "required": [
          "fileName",
          "currentVersion",
          "virusScanStatus"
        ],
        "type": "object"
      },
      "VirusScanStatus": {
        "enum": [
          "PENDING",
          "FAILED",
          "PASSED"
        ],
        "type": "string"
      }
    },
    "securitySchemes": {
      "authorizer": {
        "in": "header",
        "name": "Authorization",
        "type": "apiKey",
        "x-amazon-apigateway-authorizer": {
          "authorizerCredentials": "${APIG_EXECUTION_ROLE_ARN}",
          "authorizerResultTtlInSeconds": 300,
          "authorizerUri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${AUTHORIZER_LAMBDA_ARN}/invocations",
          "identitySource": "method.request.header.authorization",
          "type": "request"
        },
        "x-amazon-apigateway-authtype": "custom"
      }
    }
  },
  "info": {
    "description": "Backend for NHS Notify Template Management Web UI",
    "title": "NHS Notify - Web UI - Template Management API",
    "version": "v1"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/client-configuration": {
      "get": {
        "description": "Get client configuration values for the caller",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientConfigurationSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Get caller client configuration",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${GET_CLIENT_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/letter-template": {
      "post": {
        "description": "Create a letter template",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "UploadLetterTemplate": {
                  "properties": {
                    "letterPdf": {
                      "format": "binary",
                      "type": "string"
                    },
                    "template": {
                      "$ref": "#/components/schemas/CreateUpdateTemplate"
                    },
                    "testCsv": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              }
            }
          },
          "description": "Letter template to create",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "201 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Create a letter template",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${UPLOAD_LETTER_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/routing-configuration": {
      "post": {
        "description": "Create a routing configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateRoutingConfig"
              }
            }
          },
          "description": "Routing configuration to create",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingConfigSuccess"
                }
              }
            },
            "description": "201 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Create a routing configuration by ID",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${CREATE_ROUTING_CONFIG_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/routing-configuration/{routingConfigId}": {
      "get": {
        "description": "Get a routing configuration by ID",
        "parameters": [
          {
            "description": "ID of routing configuration to return",
            "in": "path",
            "name": "routingConfigId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingConfigSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Get a routing configuration by ID",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${GET_ROUTING_CONFIG_LAMBDA_ARN}/invocations"
        }
      },
      "put": {
        "description": "Update a routing configuration by Id",
        "parameters": [
          {
            "description": "ID of routing configuration to update",
            "in": "path",
            "name": "routingConfigId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingConfigSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Update a routing config",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${UPDATE_ROUTING_CONFIG_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/routing-configuration/{routingConfigId}/submit": {
      "patch": {
        "description": "Submit a routing configuration by Id",
        "parameters": [
          {
            "description": "ID of routing configuration to submit",
            "in": "path",
            "name": "routingConfigId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingConfigSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Update a routing config's status to SUBMITTED",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${SUBMIT_ROUTING_CONFIG_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/routing-configurations": {
      "get": {
        "description": "List all routing configs",
        "parameters": [
          {
            "description": "Filter by a single active status",
            "in": "query",
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/RoutingConfigStatusActive"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RoutingConfigSuccessList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "List all routing configs",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${LIST_ROUTING_CONFIGS_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/template": {
      "post": {
        "description": "Create a template",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateTemplate"
              }
            }
          },
          "description": "Template to create",
          "required": true
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "201 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Create a template",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${CREATE_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/template/{templateId}": {
      "delete": {
        "description": "Delete a template by Id",
        "parameters": [
          {
            "description": "ID of template to update",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Delete a template",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${DELETE_LAMBDA_ARN}/invocations"
        }
      },
      "get": {
        "description": "Get a template template by Id",
        "parameters": [
          {
            "description": "ID of template to return",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Get a template",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${GET_LAMBDA_ARN}/invocations"
        }
      },
      "put": {
        "description": "Update a template template by Id",
        "parameters": [
          {
            "description": "ID of template to update",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateUpdateTemplate"
              }
            }
          },
          "description": "Template to update",
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Update a template",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${UPDATE_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/template/{templateId}/proof": {
      "post": {
        "description": "Request a letter proof",
        "parameters": [
          {
            "description": "ID of the template to request a proof of",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Request a letter proof",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${REQUEST_PROOF_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/template/{templateId}/submit": {
      "patch": {
        "description": "Submit a template by Id",
        "parameters": [
          {
            "description": "ID of template to submit",
            "in": "path",
            "name": "templateId",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccess"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "Update a template's status to SUBMITTED",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${SUBMIT_LAMBDA_ARN}/invocations"
        }
      }
    },
    "/v1/templates": {
      "get": {
        "description": "List all templates",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemplateSuccessList"
                }
              }
            },
            "description": "200 response",
            "headers": {
              "Content-Type": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "default": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Failure"
                }
              }
            },
            "description": "Error"
          }
        },
        "security": [
          {
            "authorizer": []
          }
        ],
        "summary": "List all templates",
        "x-amazon-apigateway-integration": {
          "contentHandling": "CONVERT_TO_TEXT",
          "credentials": "${APIG_EXECUTION_ROLE_ARN}",
          "httpMethod": "POST",
          "passthroughBehavior": "WHEN_NO_TEMPLATES",
          "responses": {
            ".*": {
              "statusCode": "200"
            }
          },
          "timeoutInMillis": 29000,
          "type": "AWS_PROXY",
          "uri": "arn:aws:apigateway:${AWS_REGION}:lambda:path/2015-03-31/functions/${LIST_LAMBDA_ARN}/invocations"
        }
      }
    }
  }
}
